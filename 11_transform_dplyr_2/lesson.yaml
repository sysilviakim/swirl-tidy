- Class: meta
  Course: swirl-tidy
  Lesson: 11_transform_dplyr_2
  Author: Seo-young Silvia Kim
  Type: Standard
  Organization: American University
  Version: 0.1.0

# INTRO ========================================================================
- Class: text
  Output: >
    (THIS LESSON IS A PLACEHOLDER FOR FUTURE DEVELOPMENT. CHECK BACK LATER!)
  
  
    Welcome back! Today we will further explore data wrangling with {dplyr}.
    When you see ..., press Enter.
    
- Class: cmd_question
  Output: >-
    Run {install.packages("tidyverse")}, if it is not already installed.
    You can type "skip()" if this package is already installed.
    Remember to close all other sessions of R (if Windows) before this step.
    Otherwise, you may run into error messages such as 'Warning in
    install.packages : installation of package ‘XXX’ had non-zero exit status'.
  CorrectAnswer: if (!require("tidyverse")) install.packages("tidyverse")
  AnswerTests: >-
    any_of_exprs(
      'install.packages(pkgs = "tidyverse")',
      'if (!require("tidyverse")) install.packages(pkgs = "tidyverse")',
      'skip()'
    )
  Hint: 'If the package is already installed, type skip().'
    
- Class: cmd_question
  Output: 'Now load the tidyverse package.'
  CorrectAnswer: library("tidyverse")
  AnswerTests: any_of_exprs('library(tidyverse)', 'library("tidyverse")')
  Hint: 'Avoid using {require}. Use {library}.'

# PREAMBLE =====================================================================
## demo_lesson(4)
- Class: text
  Output: >-
    You've done so well to complete the previous lesson! 
    We covered {select}, {filter}, and {arrange}. In this lesson we will cover
    {mutate} and {if_else}. This could be a tough lesson, so buckle up...

## demo_lesson(5)
## demo_lesson(6)
## demo_lesson(7)
## demo_lesson(8)
## demo_lesson(9)
## demo_lesson(10)
## demo_lesson(11)
## demo_lesson(12)
## demo_lesson(13)
## demo_lesson(14)
## demo_lesson(15)
## demo_lesson(16)
## demo_lesson(17)
## demo_lesson(18)
## demo_lesson(19)
## demo_lesson(20)
## demo_lesson(21)
## demo_lesson(22)
## demo_lesson(23)
## demo_lesson(24)
## demo_lesson(25)

# OUTRO ========================================================================
- Class: text
  Output: >
    We covered lots of important material here! But dplyr is a giant Swiss army
    knife, and it can do a *lot* more. 
    
    
    You can create lagged variables with
    `lag`, mutate all variables in a single line by `mutate_all`, mutate only
    some types of variables by `mutate_if`, create random samples using
    `sample_n`, rename variables with `rename`, count the number of rows
    (in a group) with `n`, and so on. 
    
  
    If you are interested check these functions out!
    
- Class: text
  Output: >-
    You have completed "11_transform_dplyr_2" lesson of swirl-tidy!
    I will see you in the next lesson.
    